#!/bin/bash

declare -A ARCH_MAP=( [armv7l]=armhf [aarch64]=arm64 )

bootstrap() {
    local BOOTSTRAP_ARCH=$( get_option ARCH )
    local BOOTSTRAP_DIST=$( get_option DIST )

    if [ ! ${ARCH_MAP[$BOOTSTRAP_ARCH]+_} ]
    then
        fail "Invalid architecture $BOOTSTRAP_ARCH for bootstrapping $BOOTSTRAP_DIST"
    fi

    BOOTSTRAP_ARCH=${ARCH_MAP[$BOOTSTRAP_ARCH]}
    debug "Mapped $( get_option ARCH ) to $BOOTSTRAP_ARCH"

    local PATH_CACHE=$( get_path CACHE )
    local PATH_BOOTSTRAP=$PATH_CACHE/bootstrap/$BOOTSTRAP_DIST/$BOOTSTRAP_ARCH
    debug "Caching path for bootstrap is $PATH_BOOTSTRAP"

    if [[ $( contains_option FORCE_BOOTSTRAP ) == 1 ]]
    then
        debug "Recreating bootstrap for $BOOTSTRAP_DIST ($BOOTSTRAP_ARCH)"

        if [ -d $PATH_BOOTSTRAP ]
        then
            rm -r $PATH_BOOTSTRAP
        fi
    fi

    if [ ! -d $PATH_BOOTSTRAP ]
    then
        debug "Caching bootstrap for $BOOTSTRAP_DIST ($BOOTSTRAP_ARCH) in $PATH_BOOTSTRAP"
        mkdir -p $PATH_BOOTSTRAP

        case $BOOTSTRAP_DIST in
            ubuntu)
                LANG=C debootstrap --arch=$BOOTSTRAP_ARCH focal $PATH_BOOTSTRAP http://ports.ubuntu.com/
            ;;
            debian)
                LANG=C debootstrap --variant=minbase --arch=$BOOTSTRAP_ARCH buster $PATH_BOOTSTRAP http://deb.debian.org/debian/
            ;;
        esac
    fi

    rsync -aHAX --info=progress2 $PATH_BOOTSTRAP/ $( get_path BUILD )
}
